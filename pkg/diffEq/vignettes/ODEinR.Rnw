\documentclass[article,nojss]{jss}
\DeclareGraphicsExtensions{.pdf,.eps,.png}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Add-on packages and fonts
\usepackage{amsmath}
\usepackage{xspace}
\usepackage{verbatim}
\usepackage[english]{babel}
%\usepackage{mathptmx}
%\usepackage{helvet}
\usepackage[T1]{fontenc}
\usepackage[latin1]{inputenc}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
\newcommand{\di}{\textbf{\textsf{diagram}}\xspace}

\title{Solving Differential Equations in R (book) - ODE examples}

\Plaintitle{Solving Differential Equations in R (book) - ODE examples}

\Keywords{ordinary differential equations, initial value problems, examples, R}

\Plainkeywords{ordinary differential equations, initial value problems, examples, R}


\author{Karline Soetaert\\
Royal Netherlands Institute of Sea Research (NIOZ)\\
Yerseke, The Netherlands
}

\Plainauthor{Karline Soetaert}

\Abstract{This vignette contains the R-examples of chapter 4 from the book:

Soetaert, K., Cash, J.R. and Mazzia, F. (2012).
Solving Differential Equations in R. that will be published by Springer.

Chapter 4. Solving Ordinary Differential Equations in R.

Here the code is given without documentation. 
Of course, much more information about each problem can be found in the book.
 }

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Karline Soetaert\\
  Royal Netherlands Institute of Sea Research (NIOZ)\\
  4401 NT Yerseke, Netherlands
  E-mail: \email{karline.soetaert@nioz.nl}\\
  URL: \url{http://www.nioz.nl}\\
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% R/Sweave specific LaTeX commands.
%% need no \usepackage{Sweave}
%\VignetteIndexEntry{ODE examples from the book Solving Differential Equations in R by Soetaert, Cash and Mazzia (2012)}
%\VignetteKeywords{ordinary differential equations, examples}
%\VignettePackage{Solving ODEs in R}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Begin of the document
\begin{document}
\SweaveOpts{engine = R, eps = FALSE}
\SweaveOpts{keep.source = TRUE}
<<preliminaries, echo = FALSE, results = hide>>=
require(diffEq)
options(prompt = " ")
options(continue = " ")
options(width = 90)
@ 

\maketitle

\section{A differential Equation Comprising One Variable}
<<label = chap1, include = FALSE>>=
r <- 1 ; K <- 10
yini <- c(y = 2)

derivs <- function(t, y, parms)
   list(r * y * (1-y/K))

times <- seq(from = 0, to = 20, by = 0.2)
out   <- ode(y = yini, times = times, func = derivs, 
            parms = NULL)

head(out, n = 3)

#
yini <- c(y = 12)
out2 <- ode(y = yini, times = times, func = derivs,
            parms = NULL)
@
<<label=ode_simple,include=FALSE>>=
plot(out, out2, main = "logistic growth", lwd = 2)
@
\setkeys{Gin}{width=0.5\textwidth}
\begin{figure}
\begin{center}
<<label=ode_simple,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<ode_simple>>
@
\end{center}
\label{fig:ode_simple}
\caption{A simple initial value problem, solved twice with different initial conditions.  See book for more information.}
\end{figure}
\clearpage
\section{Multiple Variables: the Lorenz Model}
<<>>=
a    <- -8/3 ; b <- -10; c <- 28
yini <- c(X = 1, Y = 1, Z = 1)

Lorenz <- function (t, y, parms) {
 with(as.list(y), {
    dX <- a * X + Y * Z
    dY <- b * (Y - Z)
    dZ <- -X * Y + c * Y - Z
    list(c(dX, dY, dZ))
 })
}

times <- seq(from = 0, to = 100, by = 0.01) 
out   <- ode(y = yini, times = times, func = Lorenz, parms = NULL)
@
<<label=lorenz,include=FALSE>>=
plot(out, lwd = 2)
plot(out[,"X"], out[,"Y"], type = "l", xlab = "X",
  ylab = "Y", main = "butterfly")
@
\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
<<label=lorenz,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<lorenz>>
@
\end{center}
\caption{Solution of the lorenz equation. See book for more information.}
\label{fig:lorenz}
\end{figure}
\clearpage
\section{Rigid Body Equations}
<<>>=
yini  <- c(1, 0, 0.9)

rigidode <- function(t, y, parms) {
  dy1 <- -2  * y[2] * y[3]
  dy2 <- 1.25* y[1] * y[3]
  dy3 <- -0.5* y[1] * y[2]
  list(c(dy1, dy2, dy3))
}

times <- seq(from = 0, to = 20, by = 0.01)
out   <- ode (times = times, y = yini, func = rigidode,  
             parms = NULL, method = rkMethod("rk45ck"))
head (out, n = 3)
@

<<label=rk_rigid,include=FALSE,echo=FALSE>>=
par(mfrow = c(1, 2))
matplot(x = out[,1], y = out[,-1], type = "l", lwd = 2,
       lty = "solid", col = c("red", "blue", "black"),
       xlab = "times", ylab = "y", main = "rigidode")

legend("bottomright", col = c("red", "blue", "black"),
      legend = c("y1", "y2", "y3"), lwd = 2)

#library(scatterplot3d)
par(mar = c(0,0,0,0))
scatterplot3d(out[,-1], type = "l", lwd = 2, xlab = "",
              ylab = "", zlab = "", main = "rigidode")
@

\setkeys{Gin}{width=0.8\textwidth}
\begin{figure}
\begin{center}
<<label=rk_rigid,fig=TRUE,echo=FALSE, width=8, height=4, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<rk_rigid>>
@
\end{center}
\caption{The rigid body equations. See book for more information.}
\label{fig:rk_rigid}
\end{figure}
\clearpage
\section{Arenstorff Orbits}
<<>>=
Arenstorff <- function(t, y, p) {
  D1 <- ((y[1] + mu1)^2 + y[2]^2)^(3/2)
  D2 <- ((y[1] - mu2)^2 + y[2]^2)^(3/2)
  dy1 <- y[3]
  dy2 <- y[4]
  dy3 <- y[1] + 2*y[4] - mu2*(y[1]+mu1)/D1 - mu1*(y[1]-mu2)/D2
  dy4 <- y[2] - 2*y[3] - mu2*y[2]/D1 - mu1*y[2]/D2
  return(list( c(dy1, dy2, dy3, dy4) ))
}
mu1   <- 0.012277471
mu2   <- 1 - mu1
yini  <- c(y1 = 0.994, y2 = 0,
          dy1 = 0, dy2 = -2.00158510637908252240537862224)
times <- seq(from = 0, to = 18, by = 0.01)

out <- ode(func = Arenstorff, y = yini, times = times,
           parms = 0, method = "ode45")

yini2 <- c(y1 = 0.994, y2 = 0,
            dy1 = 0, dy2 = -2.0317326295573368357302057924)
out2 <- ode(func = Arenstorff, y = yini2, times = times,
            parms = 0, method = "ode45")

yini3 <- c(y1 = 1.2, y2 = 0,
            dy1 = 0, dy2 = -1.049357510)
out3 <- ode(func = Arenstorff, y = yini3, times = times,
            parms = 0, method = "ode45")
@
<<label=Arenstorff, include=FALSE>>=
plot(out, out2, out3, which = c("y1", "y2"), 
     mfrow = c(2, 2), col = "black", lwd = 2)

plot(out[  ,c("y1", "y2")], type = "l", lwd = 2,
     xlab = "y1", ylab = "y2", main = "solutions 1,2")
lines(out2[ ,c("y1", "y2")], lwd = 2, lty = 2)

plot(out3[ ,c("y1", "y2")], type = "l", lwd = 2, lty = 3,
     xlab = "y1", ylab = "y2", main = "solution 3")
@
\setkeys{Gin}{width=0.8\textwidth}
\begin{figure}
\begin{center}
<<label = Arenstorff, fig = TRUE, echo = FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<Arenstorff>>
@
\end{center}
\caption{The Arenstorff problem. See book for more information.}
\label{fig:Arenstorff}
\end{figure}
\clearpage

\section{Seven Moving Stars}
<<>>=
pleiade <- function (t, Y, pars) {
   x <- Y[1:7]
   y <- Y[8:14]
   u <- Y[15:21]
   v <- Y[22:28]

   distx <- outer(x, x, FUN = function(x, y) x - y)
   disty <- outer(y, y, FUN = function(x, y) x - y)

   rij3 <- (distx^2 + disty^2)^(3/2)

   fx <- starMass * distx / rij3
   fy <- starMass * disty / rij3

   list(c(dx = u,
          dy = v,
          du = colSums(fx, na.rm = TRUE),
          dv = colSums(fy, na.rm = TRUE)))
}

starMass <- 1:7

yini<- c(x1= 3, x2= 3, x3=-1, x4=-3,    x5= 2, x6=-2,   x7= 2,
        y1= 3, y2=-3, y3= 2, y4= 0,    y5= 0, y6=-4,   y7= 4,
        u1= 0, u2= 0, u3= 0, u4= 0,    u5= 0, u6=1.75, u7=-1.5,
        v1= 0, v2= 0, v3= 0, v4=-1.25, v5= 1, v6= 0,   v7= 0)
print(system.time(        
out <- ode(func = pleiade, parms = NULL, y = yini,
          method = "adams", times = seq(0, 3, 0.01))))
@

<<label=pleiades, include=FALSE>>=
par(mfrow = c(3, 3))
for (i in 1:7) {
  plot(out[,i+1], out[,i+8], type = "l",
      main = paste("star ",i), xlab = "x", ylab = "y")
  points (yini[i], yini[i+7])
}
plot(out[, 2:8], out[, 9:15], type = "p", cex = 0.5,
     main = "ALL", xlab = "x", ylab = "y")
text(yini[1:7], yini[8:14], 1:7)
matplot(out[,"time"], out[, c("u1", "u7")], type = "l",
    lwd = 2, col = c("black", "grey"), lty = 1,
    xlab = "time", ylab = "velocity", main = "stars 1, 7")
abline(v = c(1.23, 1.68), lty = 2)
legend("bottomright", col = c("black", "grey"), lwd = 2,
       legend = c("u1", "u7"))
@
\setkeys{Gin}{width=0.8\textwidth}
\begin{figure}
\begin{center}
<<label = pleiades, fig = TRUE, echo = FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<pleiades>>
@
\end{center}
\caption{The pleiades problem. See book for more information.}
\label{fig:pleiades}
\end{figure}

\clearpage
\subsection{A stiff Chemical Example}
<<>>=
load(file = "light.rda")
head(Light, n = 4)

irradiance <- approxfun(Light)
irradiance(seq(from = 0, to = 1, by = 0.25))
k3 <- 1e-11; k2 <- 1e10; k1a <- 1e-30
k1b <- 1; sigma <- 1e11
yini <- c(O = 0, NO = 1.3e8, NO2 = 5e11, O3 = 8e11)

chemistry <- function(t, y, parms) {
  with(as.list(y), {
  
    radiation <- irradiance(t)
    k1  <- k1a + k1b*radiation
  
    dO   <-  k1*NO2 - k2*O
    dNO  <-  k1*NO2        - k3*NO*O3 + sigma
    dNO2 <- -k1*NO2        + k3*NO*O3
    dO3  <-           k2*O - k3*NO*O3
    list(c(dO, dNO, dNO2, dO3), radiation = radiation)
  })
}

times <- seq(from = 8/24, to = 5, by = 0.01)
out <- ode(func = chemistry, parms = NULL, y = yini, 
          times = times, method = "bdf")
@
<<label=atmos,include=FALSE>>=
plot(out, type = "l", lwd = 2 )
@

\setkeys{Gin}{width=1.0\textwidth}
\begin{figure}
\begin{center}
<<label=atmos,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<atmos>>
@
\end{center}
\caption{The atmospheric chemistry model. See book for more information.}
\label{fig:atmos}
\end{figure}
\clearpage

\section{Pharmacokinetic Models}
\subsection{first example}
<<>>=
a <- 6; b <- 0.6
yini <- c(intestine = 0, blood = 0)

pharmacokinetics <- function(t, y, p) {
  if ( (24*t) %% 24 <= 1)
    uptake <- 2
  else
    uptake <- 0
  dy1 <- - a* y[1] + uptake 
  dy2 <-  a* y[1] - b *y[2]
  list(c(dy1, dy2))
}

times <- seq(from = 0, to = 10, by = 1/24)
out <- ode(func = pharmacokinetics, times = times, 
           y = yini, parms = NULL)

times <- seq(0, 10,  by = 3/24)
out2 <- ode(func = pharmacokinetics, times = times, 
           y = yini, parms = NULL, method = "impAdams")
@
<<label=pharma1,include=FALSE, echo = FALSE>>=
plot(out, lwd = 2, mfrow = c(2, 2), xlab = "day")
plot(out2, lwd = 2, mfrow = NULL, xlab = "day")
@
\setkeys{Gin}{width=0.5\textwidth}
\begin{figure}
\begin{center}
<<label=pharma1,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<pharma1>>
@
\end{center}
\caption{The 2-compartment pharmacokinetic model. See book for more information.}
\label{fig:pharma1}
\end{figure}

\clearpage
\subsection{second example}
<<>>=
b    <- 0.6
yini <- c(blood = 0)

pharmaco2 <- function(t, blood, p) {
  dblood <-  - b * blood
  list(dblood)
}

injectevents <- data.frame(var = "blood",
                          time =  0:20,
                          value = 40,
                          method = "add")
head(injectevents, n=3)

times <- seq(from = 0, to = 10, by = 1/24)

out2 <- ode(func = pharmaco2, times = times, y = yini, 
           parms = NULL, method = "impAdams", 
           events = list(data = injectevents))
@

<<label=pharma2,include=FALSE>>=
plot(out2, lwd = 2)
@
\setkeys{Gin}{width=0.4\textwidth}
\begin{figure}
\begin{center}
<<label=pharma2,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<pharma2>>
@
\end{center}
\caption{The 1-compartment pharmacokinetic model. See book for more information.}
\label{fig:pharma2}
\end{figure}
\clearpage
\section{A Bouncing Ball}
<<>>=
yini  <- c(height = 0, velocity = 10)

ball <- function(t, y, parms) {
  dy1 <- y[2]
  dy2 <- -9.8     

  list(c(dy1, dy2))
}

rootfunc <- function(t, y, parms) y[1]

eventfunc <- function(t, y, parms) {
 y[1] <- 0
 y[2] <- -0.9*y[2]
 return(y)
}

times <- seq(from = 0, to = 20, by = 0.01)
out <- ode(times = times, y = yini, func = ball,
             parms = NULL, rootfun = rootfunc,
             events = list(func = eventfunc, root = TRUE))
@

<<label=event_ball,include=FALSE>>=
plot(out, which = "height", lwd = 2,
    main = "bouncing ball", ylab = "height")
@
\setkeys{Gin}{width=0.5\textwidth}
\begin{figure}
\begin{center}
<<label=event_ball,fig=TRUE,echo=FALSE, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<event_ball>>
@
\end{center}
\caption{The bouncing ball model. See book for more information.}
\label{fig:event_ball}
\end{figure}
\clearpage
\section{Temperature in a Climate-controlled Room}
<<>>=
yini  <- c(temp = 18, heating_on = 1)

temp <- function(t, y, parms) {
  dy1 <- ifelse(y[2] == 1, 1.0, -0.5)  
  dy2 <- 0
  list(c(dy1, dy2))
}

rootfunc <- function(t, y, parms) c(y[1]-18, y[1]-20)

eventfunc <- function(t, y, parms) {
 y[1] <- y[1]
 y[2] <- ! y[2]
 return(y)
}

times <- seq(from = 0, to = 20, by = 0.1)

out <- lsode(times = times, y = yini, func = temp, 
            parms = NULL, rootfun = rootfunc, 
            events = list(func = eventfunc, root = TRUE))
@
<<>>=
attributes(out)$troot
@
<<label=temp_room,include=FALSE>>=
plot(out, lwd = 2)
@
\setkeys{Gin}{width=0.6\textwidth}
\begin{figure}
\begin{center}
<<label=temp_room,fig=TRUE,echo=FALSE, width=6, height=4, png=TRUE, pdf=FALSE, eps=FALSE>>=
<<temp_room>>
@
\end{center}
\caption{The temperature model. See book for more information.}
\label{fig:temp_room}
\end{figure}
@
\clearpage
\section{Method Selection}
<<>>=
yini  <- c(y = 2, dy = 0)  

Vdpol <- function(t, y, mu)  
   list(c(y[2], 
          mu * (1 - y[1]^2) * y[2] - y[1]))

times <- seq(from = 0, to = 30, by = 0.01)

nonstiff <- ode(func = Vdpol, parms = 1,    y = yini, 
               times = times)
diagnostics(nonstiff)
@
\clearpage
\end{document}

